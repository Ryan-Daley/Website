import {
  hydrate,
  render
} from "./chunk-6FES7MTC.js";
import {
  createComponent,
  sharedConfig
} from "./chunk-PZH6NV7E.js";
import "./chunk-DFKQJ226.js";

// node_modules/.pnpm/@astrojs+solid-js@2.1.0_solid-js@1.6.15/node_modules/@astrojs/solid-js/dist/client.js
var client_default = (element) => (Component, props, slotted, { client }) => {
  if (!window._$HY) {
    window._$HY = { events: [], completed: /* @__PURE__ */ new WeakSet(), r: {} };
  }
  if (!element.hasAttribute("ssr"))
    return;
  const fn = client === "only" ? render : hydrate;
  let _slots = {};
  if (Object.keys(slotted).length > 0) {
    if (sharedConfig.context) {
      element.querySelectorAll("astro-slot").forEach((slot) => {
        _slots[slot.getAttribute("name") || "default"] = slot.cloneNode(true);
      });
    } else {
      for (const [key, value] of Object.entries(slotted)) {
        _slots[key] = document.createElement("astro-slot");
        if (key !== "default")
          _slots[key].setAttribute("name", key);
        _slots[key].innerHTML = value;
      }
    }
  }
  const { default: children, ...slots } = _slots;
  const renderId = element.dataset.solidRenderId;
  fn(
    () => createComponent(Component, {
      ...props,
      ...slots,
      children
    }),
    element,
    {
      renderId
    }
  );
};
export {
  client_default as default
};
//# sourceMappingURL=@astrojs_solid-js_client__js.js.map

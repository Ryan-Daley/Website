// src/file.ts
var load = async (url) => {
  try {
    const res = await fetch(url);
    if (!res.ok)
      throw Error("Request error: " + res);
    return res.text();
  } catch (error) {
    return Promise.reject(error);
  }
};
var upload = (e, callback) => {
  e.stopPropagation();
  if (!e.target.files || e.target.files.length < 1)
    return;
  const file = e.target.files[0];
  let fileReader = null;
  const handleFileRead = () => {
    const content = fileReader.result;
    callback(content);
  };
  fileReader = new FileReader();
  fileReader.onloadend = handleFileRead;
  fileReader.readAsText(file);
};
var download = (filename, content) => {
  const element = document.createElement("a");
  element.setAttribute(
    "href",
    "data:text/plain;charset=utf-8," + encodeURIComponent(content)
  );
  element.setAttribute("download", filename);
  element.style.display = "none";
  document.body.appendChild(element);
  element.click();
  document.body.removeChild(element);
};
var file_default = {
  load,
  upload,
  download
};

export {
  load,
  upload,
  download,
  file_default
};
